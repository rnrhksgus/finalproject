<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- [1] DataSource빈 선언 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/choMapper.xml</value>
				<value>classpath:config/jeongMapper.xml</value>
				<value>classpath:config/kooMapper.xml</value>
				<value>classpath:config/limMapper.xml</value>
				<value>classpath:config/songMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션: <tx:advice>태그를 이용한 트랜잭션 처리 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- [6] 트랜잭션으로 처리할 메소드에 transactionManger설정 -->
	<aop:config>
		<aop:pointcut expression="execution(* service.*ServiceImp.*Process(..))" id="aa" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aa" />
	</aop:config>

	<!-- DAO -->
	<bean id="choDao" class="dao.ChoDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	<bean id="jeongDao" class="dao.JeongDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	<bean id="kooDao" class="dao.KooDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	<bean id="limDao" class="dao.LimDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	<bean id="songDao" class="dao.SongDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<!-- Service -->
	<bean id="choService" class="service.ChoServiceImp">
		<property name="dao" ref="choDao" />
	</bean>
	<bean id="jeongService" class="service.JeongServiceImp">
		<property name="dao" ref="jeongDao" />
	</bean>
	<bean id="kooService" class="service.KooServiceImp">
		<property name="dao" ref="kooDao" />
	</bean>
	<bean id="limService" class="service.LimServiceImp">
		<property name="dao" ref="limDao" />
	</bean>
	<bean id="songService" class="service.SongServiceImp">
		<property name="dao" ref="songDao" />
	</bean>

	<bean id="path" class="java.lang.String">
		<constructor-arg value="c:/travel/" />
	</bean>

	<!-- controller -->
	<bean class="controller.MainController"/>
	<bean class="controller.TilesController"/>
	<bean class="controller.ChoController">
		<property name="service" ref="choService"/>
		<property name="path" ref="path"/>
	</bean>
	<bean class="controller.JeongController">
		<property name="service" ref="jeongService"/>
		<property name="path" ref="path"/>
	</bean>
	<bean class="controller.KooController">
		<property name="service" ref="kooService"/>
		<property name="path" ref="path"/>
	</bean>
	<bean class="controller.LimController">
		<property name="service" ref="limService"/>
		<property name="path" ref="path"/>
	</bean>
	<bean class="controller.SongController">
		<property name="service" ref="songService"/>
		<property name="path" ref="path"/>
	</bean>

	<!-- 파일 업로드 시작 -->
	<!-- 첨부 파일의 임시기억장치 경로 설정 -->
	<!-- <bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource"> 
		<constructor-arg value="c:/temp"/> <constructor-arg value="./src/main/webapp/files/" 
		/> </bean> -->

	<!-- 첨부파일을 임시기억저장소에 저장한다. -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- <property name="uploadTempDir" ref="uploadDirResource"/> -->
		<property name="maxUploadSize" value="1000000000" />
	</bean>
	<!-- 파일 업로드 끝 -->

	<!-- tiles -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- View 빈 선언 -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		<property name="order" value="1"/>
	</bean>

	<!-- viewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/travel/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2"/>
	</bean>


</beans>
